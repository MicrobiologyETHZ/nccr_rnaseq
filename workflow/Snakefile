from scripts.get_vars import *
import sys
import pandas as pd

DATADIR = Path(config['dataDir'])
OUTDIR = Path(config['outDir'])


# Sample Name, Unit, forward reads, reverse reads
sampleInfo = pd.read_csv(config['samples'])

samples_to_merge = (sampleInfo.loc[sampleInfo.groupby('sample')
                    .unit.filter(lambda x: x.nunique() > 1).index]['sample']
                    .unique())

SAMPLES = pd.read_csv(config['samples'])['sample'].unique()

include: "rules/preprocessing.smk"
include: "rules/rnaseq.smk"

"""
Preprocessing:

In the config file, can specify whether to run FastQC before preprocessing, after, both or not at all.
By default, will only run after preprocessing.

Preprocessing:
    - 

"""
if not config['fastqc']:
    rule preprocess:
        input: [OUTDIR/f'clean_reads/{sample}/{sample}.qc.done' for sample in SAMPLES]
elif config['fastqc'] == 'after':
    rule preprocess:
        input: OUTDIR/'fastqc/after.multiqc.done'
elif config['fastqc'] == 'before':
    rule preprocess:
        input: OUTDIR/'fastqc/before.multiqc.done'
elif config['fastqc'] == 'both':
    rule preprocess:
        input: OUTDIR/'fastqc/both.multiqc.done'
else:
    print(f'{config["fastqc"]} is not a recognized option for fastqc')
    sys.exit(1)


rule star:
    input: [OUTDIR/f'counts/{sample}/{sample}.count.txt' for sample in SAMPLES]

rule kallisto:
    input: [OUTDIR/f'kallisto/{sample}.done' for sample in SAMPLES]

rule salmon:
    input: [OUTDIR / f'salmon/{sample}_quant/quant.sf' for sample in SAMPLES]